name: Generar archivo YAML de Secret desde HCP Vault

on:
  workflow_dispatch:

jobs:
  generar-secret-yaml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Instalar jq (para procesar JSON)
        run: sudo apt-get update && sudo apt-get install jq -y

      - name: Leer secretos desde HCP Vault y generar archivo YAML (Base64)
        run: |
          set -e

          echo "üîê Obteniendo token temporal de HCP..."
          HCP_API_TOKEN=$(curl --silent --location "https://auth.idp.hashicorp.com/oauth2/token" \
            --header "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "client_id=${{ secrets.HCP_CLIENT_ID }}" \
            --data-urlencode "client_secret=${{ secrets.HCP_CLIENT_SECRET }}" \
            --data-urlencode "grant_type=client_credentials" \
            --data-urlencode "audience=https://api.hashicorp.cloud" | jq -r .access_token)

          echo "üì¶ Obteniendo secretos..."
          response=$(curl --silent --location \
            "https://api.cloud.hashicorp.com/secrets/2023-11-28/organizations/${{ secrets.SINGLESTORE_ORG_ID }}/projects/${{ secrets.SINGLESTORE_WORKSPACE_GROUP_ID }}/apps/sample-app/secrets:open" \
            --header "Authorization: Bearer $HCP_API_TOKEN")

          echo "üîç Respuesta del API (debug):"
          echo "$response" | jq

          ORG_ID=$(echo "$response" | jq -r '.secrets[] | select(.name == "SINGLESTORE_ORG_ID") | .value')
          GROUP_ID=$(echo "$response" | jq -r '.secrets[] | select(.name == "SINGLESTORE_WORKSPACE_GROUP_ID") | .value')
          API_KEY=$(echo "$response" | jq -r '.secrets[] | select(.name == "SINGLESTORE_API_KEY") | .value')

          echo "üîê Secretos obtenidos:"
          echo "ORG_ID: $ORG_ID"
          echo "GROUP_ID: $GROUP_ID"
          echo "API_KEY: $API_KEY"

          # Validar que no est√©n vac√≠os
          if [[ -z "$ORG_ID" || -z "$GROUP_ID" || -z "$API_KEY" ]]; then
            echo "‚ùå Uno o m√°s secretos no se pudieron obtener. Verifica los nombres y la app sample-app."
            exit 1
          fi

          # Codificar a Base64
          ORG_ID_B64=$(echo -n "$ORG_ID" | base64)
          GROUP_ID_B64=$(echo -n "$GROUP_ID" | base64)
          API_KEY_B64=$(echo -n "$API_KEY" | base64)

          echo "‚úÖ Generando archivo YAML..."
          cat <<EOF > singlestore-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: singlestore-secret
  namespace: singlestore-collector
data:
  SINGLESTORE_ORG_ID: $ORG_ID_B64
  SINGLESTORE_WORKSPACE_GROUP_ID: $GROUP_ID_B64
  SINGLESTORE_API_KEY: $API_KEY_B64
EOF

      - name: Mostrar YAML generado
        run: cat singlestore-secret.yaml
